import * as SchemaTypes from '../SchemaTypes';
import * as SimpleSchemaTypes from '../SimpleSchemaTypes';
import BaseResource from '../../BaseResource';
export default class ItemTypeFilter extends BaseResource {
    static readonly TYPE: 'item_type_filter';
    /**
     * Create a new filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/item-type_filter/create
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    create(body: SimpleSchemaTypes.ItemTypeFilterCreateSchema): Promise<SimpleSchemaTypes.ItemTypeFilter>;
    /**
     * Create a new filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/item-type_filter/create
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawCreate(body: SchemaTypes.ItemTypeFilterCreateSchema): Promise<SchemaTypes.ItemTypeFilterCreateTargetSchema>;
    /**
     * Update a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/item-type_filter/update
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    update(itemTypeFilterId: string | SimpleSchemaTypes.ItemTypeFilterData, body: SimpleSchemaTypes.ItemTypeFilterUpdateSchema): Promise<SimpleSchemaTypes.ItemTypeFilter>;
    /**
     * Update a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/item-type_filter/update
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawUpdate(itemTypeFilterId: string, body: SchemaTypes.ItemTypeFilterUpdateSchema): Promise<SchemaTypes.ItemTypeFilterUpdateTargetSchema>;
    /**
     * List all filters
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/item-type_filter/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    list(): Promise<SimpleSchemaTypes.ItemTypeFilterInstancesTargetSchema>;
    /**
     * List all filters
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/item-type_filter/instances
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawList(): Promise<SchemaTypes.ItemTypeFilterInstancesTargetSchema>;
    /**
     * Retrieve a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/item-type_filter/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    find(itemTypeFilterId: string | SimpleSchemaTypes.ItemTypeFilterData): Promise<SimpleSchemaTypes.ItemTypeFilter>;
    /**
     * Retrieve a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/item-type_filter/self
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawFind(itemTypeFilterId: string): Promise<SchemaTypes.ItemTypeFilterSelfTargetSchema>;
    /**
     * Delete a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/item-type_filter/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    destroy(itemTypeFilterId: string | SimpleSchemaTypes.ItemTypeFilterData): Promise<SimpleSchemaTypes.ItemTypeFilter>;
    /**
     * Delete a filter
     *
     * Read more: https://www.datocms.com/docs/content-management-api/resources/item-type_filter/destroy
     *
     * @throws {ApiError}
     * @throws {TimeoutError}
     */
    rawDestroy(itemTypeFilterId: string): Promise<SchemaTypes.ItemTypeFilterDestroyTargetSchema>;
}
